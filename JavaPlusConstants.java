/* Generated By:JavaCC: Do not edit this line. JavaPlusConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JavaPlusConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASIGNACION = 1;
  /** RegularExpression Id. */
  int SUMAR = 2;
  /** RegularExpression Id. */
  int RESTAR = 3;
  /** RegularExpression Id. */
  int MULTIPLICAR = 4;
  /** RegularExpression Id. */
  int DIVIDIR = 5;
  /** RegularExpression Id. */
  int INCR = 6;
  /** RegularExpression Id. */
  int DECR = 7;
  /** RegularExpression Id. */
  int PUBLIC = 8;
  /** RegularExpression Id. */
  int PRIVATE = 9;
  /** RegularExpression Id. */
  int STATIC = 10;
  /** RegularExpression Id. */
  int VOID = 11;
  /** RegularExpression Id. */
  int MAIN = 12;
  /** RegularExpression Id. */
  int PROGRAMA = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int ELSEIF = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int SWITCH = 18;
  /** RegularExpression Id. */
  int CASE = 19;
  /** RegularExpression Id. */
  int BREAK = 20;
  /** RegularExpression Id. */
  int DEFAUL = 21;
  /** RegularExpression Id. */
  int DO = 22;
  /** RegularExpression Id. */
  int WHILE = 23;
  /** RegularExpression Id. */
  int IMPRIMIR = 24;
  /** RegularExpression Id. */
  int LEER = 25;
  /** RegularExpression Id. */
  int PARENTESIS_A = 26;
  /** RegularExpression Id. */
  int PARENTESIS_C = 27;
  /** RegularExpression Id. */
  int LLAVE_A = 28;
  /** RegularExpression Id. */
  int LLAVE_C = 29;
  /** RegularExpression Id. */
  int DEF = 30;
  /** RegularExpression Id. */
  int CORCHETE_C = 31;
  /** RegularExpression Id. */
  int PUNTO_COMA = 32;
  /** RegularExpression Id. */
  int COMA_SIMPLE = 33;
  /** RegularExpression Id. */
  int PUNTO_SIMPLE = 34;
  /** RegularExpression Id. */
  int DOUBLECOMMA = 35;
  /** RegularExpression Id. */
  int EQ = 36;
  /** RegularExpression Id. */
  int LE = 37;
  /** RegularExpression Id. */
  int MN = 38;
  /** RegularExpression Id. */
  int GE = 39;
  /** RegularExpression Id. */
  int GR = 40;
  /** RegularExpression Id. */
  int NE = 41;
  /** RegularExpression Id. */
  int OR = 42;
  /** RegularExpression Id. */
  int SCANS = 43;
  /** RegularExpression Id. */
  int ENTERO = 44;
  /** RegularExpression Id. */
  int FLOAT = 45;
  /** RegularExpression Id. */
  int CHR = 46;
  /** RegularExpression Id. */
  int STRING = 47;
  /** RegularExpression Id. */
  int NUMERO = 48;
  /** RegularExpression Id. */
  int VARIABLE = 49;
  /** RegularExpression Id. */
  int DECIMAL = 50;
  /** RegularExpression Id. */
  int CADENA = 51;
  /** RegularExpression Id. */
  int CARAC = 52;
  /** RegularExpression Id. */
  int PUNTO_DOBLE = 53;
  /** RegularExpression Id. */
  int LETRA = 58;
  /** RegularExpression Id. */
  int NUMERO_INVALIDO = 59;
  /** RegularExpression Id. */
  int INVALIDO = 60;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"public\"",
    "\"private\"",
    "\"static\"",
    "\"void\"",
    "\"main()\"",
    "\"Programa\"",
    "\"if\"",
    "\"else\"",
    "\"elseif\"",
    "\"for\"",
    "\"switch\"",
    "\"case\"",
    "\"break\"",
    "\"default\"",
    "\"do\"",
    "\"while\"",
    "\"printf\"",
    "\"scan\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"def\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"\\\"\"",
    "\"==\"",
    "\"<=\"",
    "\"<\"",
    "\">=\"",
    "\">\"",
    "\"!=\"",
    "\"||\"",
    "\"scans\"",
    "\"int\"",
    "\"float\"",
    "\"chr\"",
    "\"string\"",
    "<NUMERO>",
    "<VARIABLE>",
    "<DECIMAL>",
    "<CADENA>",
    "<CARAC>",
    "\":\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<LETRA>",
    "<NUMERO_INVALIDO>",
    "<INVALIDO>",
  };

}
